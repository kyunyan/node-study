var a= 1; 
var b =2 ;

console.log(a+b);
console.log("hello node");

// 노드란 무엇인가 ? 
// 노드는 자바 스크립트를 웹브라우저 밖으로 꺼내주는 가상 머신? 이라고 볼수있다 
// 마치 자바의 JVM 같이 

// 실행 시킬때 
// node helloNode.js 하면 되는데 js파일 확장자 쓰지 않더라도 node helloNode를 통해 노드 실행 가능

// 노드를 서버로서 사용할때 : 서버는 항상 사용자에 요청에 따라 항상 응답할 준비가 되어 있어야 된다
// 노드를 어떻게 서버로서 사용할 것인가 ? 
/*
    node.js 는 크롬 자바스크립트 엔진으로 빌드된 자바스크립트 런타임 입니다. 
    node.js는 이벤트 기반 논 블로킹 , I/O모델을 사용해 가볍고 효율적입니다
    node.js는 패키지 생태계인 npm은 세계에서 가장큰 오폰소스 라이브러리 생태계

    노드에 핵심적인 개념 3가지
    이벤트 기반 ,논블로킹 I/O, 싱글 스레드
    이것을 알기 위해서는 이벤트 루프를 알아야한다 . 
    이벤트 루프란 ? 
    자바스크립트 코드쭉있을때 이게 어떤 순서로 실행되는지 이해할수 있는가 
    이해 하기 쉽게 대충 함수를 선언해 놓고 함수를 콜 할때 그 콜하는 함수 순서를 알아 무엇이 먼저 실행되는지 이해할수 있는가
    머리속으로는 미리 생각하고 이해하고 있어야 한다. 
    LIFO 함수 스택(콜 스택) 이라고 한다. 


*/

function run(){
    console.log("3초후 실행");
}
console.log("시작");
setTimeout(run, 3000);
console.log("끝");

/*
    호출 스택(콜 스택) - 스택은 위에서부터 사라진다 

    이벤트 루프
    
    태스크 큐 ? 언제 태스크 큐에 들어가나요 ? 
    큐는 스택에 반대되는 개념 
    먼저 들어온 것이 먼저 나간다 FIFO 
    Settimeout 같은 것이 태스크큐

    호출 스택 (콜 스택)                             태스크 큐

    consolelog 실행되고 먼저 사라진다

    setTimeout(run)                             태스크 큐에다 보내버린다 run은 3초 뒤에 실행

    consolelog 실행되고 사라진다

    이벤트 루프의 역활은 호출 스택이 비워지면 태스크 큐에서 함수를 꺼내온다 
    이벤트 루프는 3초 되었냐고 태스크 큐쪽에 확인을 한후 
    3초가 지나면 호출스택으로 settimeout 함수를 가져온다

    호출 스택에서 run 을 실행 시킨고 콘솔로그 출력 
    다 실행되면 호출 스택은 사라진다

    언제 태스크 큐에 들어가나요 ? 
    1. setTimeOut , setInterval , setImmediate
    2. promise resolve , reject (async await )
    3. 이벤트 리스너의 콜백 

    이벤트 루프의 역활은 태스크 큐에 대기하고있는 것들을 꺼내오는 역활을 한다 . 
    이벤트 루프는 우선순위에 따라 실행을 먼저 시킬수도 있다
    이벤트 리스너 같이 이벤트가 먼저 일어났을때 코드의 순서를 조정할수 있다 . .
    이벤트 루프는 자바사크립트의 핵심!! 

    node 입력한후 파일이름 출력하는 것은 한번 실행하고 꺼지기 때문에
    서버와 같이 지속적으로 사용자의 요청을 기다리지 않는다

    서버란 ? 요청을 받아서 응답을 하는것
    서버가 서버에 요청을 시킬수 있따 . 
    요청의 특징은 언제 올지 모른다 . 
    그래서 계속 기다리다가 사용하는것이 이벤트 리스너이다. 
    
    이 흐름을 기억!! 이 흐름은 이벤트 드리븐
    사용자의 요청이 들어오면 이벤트 리스너가 작동해 태스크큐로 보낸다
    이벤트루프의 역활은 여러개의 태스크큐에 우선순위를 파악해서 호출스택으로 옮겨준다 . 
    중요한 우선순위를 이벤트 루프는 태스크큐에서 호출스택으로 옮겨준다 . 

    nonblocking IO
    setTimeout같이 호출 스택에 싸이는게 아니라 run 을 테스크 큐로보내버리는 동작을
    논블록킹이라고 한다. 
    논 블록킹은 순서의 문제 눈에 보이는 코드의 순서가 nonblocking이라고 봐도된다. 

    IO는 input output 파일시스템과 network 알아둬라 !!
    파일 시스템은 아라서 멀티 스레드 노드는 싱글스레드
    싱글 스레드는 파일이 하나라 하나의 일 멀드 스레드는 한번에 여러가지의 일 가능
    노드가 싱글 스레드인데
    노드가 스레드를 여러개 할수있도록 비슷하게 동작할수 있도록 노드를 사용할 수 있다 . 
    스레드 보다 큰 개념인 프로세스 
    프로세스를 여러개 만들어서 멀티프로레스를 이용해서 싱글스레드의 단점을 극복 


    



        



*/  



